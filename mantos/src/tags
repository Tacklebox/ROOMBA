!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
BOARD_SUB	Makefile	/^BOARD_SUB = atmega2560$/;"	m
BOARD_TAG	Makefile	/^BOARD_TAG = mega$/;"	m
CREATE	active.c	/^   CREATE,$/;"	e	enum:kernel_request_type	file:
CSwitch	cswitch.S	/^CSwitch:$/;"	l
Cp	active.c	/^volatile static PD* Cp;$/;"	v	file:
CurrentSp	active.c	/^volatile unsigned char *CurrentSp;$/;"	v
DEAD	active.c	/^   DEAD = 0,$/;"	e	enum:process_states	file:
Disable_Interrupt	active.c	77;"	d	file:
Dispatch	active.c	/^static void Dispatch()$/;"	f	file:
EIND	cswitch.S	/^EIND    = 0x3C$/;"	d
Enable_Interrupt	active.c	78;"	d	file:
Enter_Kernel	cswitch.S	/^Enter_Kernel:   $/;"	l
Exit_Kernel	cswitch.S	/^Exit_Kernel:$/;"	l
KERNEL_REQUEST_TYPE	active.c	/^} KERNEL_REQUEST_TYPE;$/;"	t	typeref:enum:kernel_request_type	file:
KernelActive	active.c	/^volatile static unsigned int KernelActive;$/;"	v	file:
KernelSp	active.c	/^volatile unsigned char *KernelSp;$/;"	v
Kernel_Create_Task	active.c	/^static void Kernel_Create_Task( voidfuncptr f )$/;"	f	file:
Kernel_Create_Task_At	active.c	/^void Kernel_Create_Task_At( PD *p, voidfuncptr f )$/;"	f
LED_BLINK_DURATION	active.c	36;"	d	file:
MAXPROCESS	active.c	35;"	d	file:
NEXT	active.c	/^   NEXT,$/;"	e	enum:kernel_request_type	file:
NONE	active.c	/^   NONE = 0,$/;"	e	enum:kernel_request_type	file:
NextP	active.c	/^volatile static unsigned int NextP;$/;"	v	file:
Next_Kernel_Request	active.c	/^static void Next_Kernel_Request()$/;"	f	file:
OBJDIR	Makefile	/^OBJDIR = ..\/bin$/;"	m
OS_Init	active.c	/^void OS_Init()$/;"	f
OS_Start	active.c	/^void OS_Start()$/;"	f
PD	active.c	/^} PD;$/;"	t	typeref:struct:ProcessDescriptor	file:
PROCESS_STATES	active.c	/^} PROCESS_STATES;$/;"	t	typeref:enum:process_states	file:
Ping	active.c	/^void Ping()$/;"	f
Pong	active.c	/^void Pong()$/;"	f
Process	active.c	/^static PD Process[MAXPROCESS];$/;"	v	file:
ProcessDescriptor	active.c	/^typedef struct ProcessDescriptor$/;"	s	file:
READY	active.c	/^   READY,$/;"	e	enum:process_states	file:
RUNNING	active.c	/^   RUNNING$/;"	e	enum:process_states	file:
SPH	cswitch.S	/^SPH    = 0x3E$/;"	d
SPL	cswitch.S	/^SPL    = 0x3D$/;"	d
SREG	cswitch.S	/^SREG  = 0x3F$/;"	d
TARGET	Makefile	/^TARGET = exercise$/;"	m
TERMINATE	active.c	/^   TERMINATE$/;"	e	enum:kernel_request_type	file:
Task_Create	active.c	/^void Task_Create( voidfuncptr f)$/;"	f
Task_Next	active.c	/^void Task_Next()$/;"	f
Task_Terminate	active.c	/^void Task_Terminate()$/;"	f
Tasks	active.c	/^volatile static unsigned int Tasks;$/;"	v	file:
USER_LIB_PATH	Makefile	/^USER_LIB_PATH = ..\/lib$/;"	m
WORKSPACE	active.c	34;"	d	file:
code	active.c	/^   voidfuncptr  code;   \/* function to be executed as a task *\/$/;"	m	struct:ProcessDescriptor	file:
disable_LEDs	LED_Test.c	/^void disable_LEDs(void)$/;"	f
enable_LED	LED_Test.c	/^void enable_LED(unsigned int mask)$/;"	f
init_LED_D10	LED_Test.c	/^void init_LED_D10(void)$/;"	f
init_LED_D11	LED_Test.c	/^void init_LED_D11(void)$/;"	f
init_LED_D12	LED_Test.c	/^void init_LED_D12(void)$/;"	f
kernel_request_type	active.c	/^typedef enum kernel_request_type$/;"	g	file:
main	active.c	/^void main()$/;"	f
process_states	active.c	/^typedef enum process_states$/;"	g	file:
request	active.c	/^   KERNEL_REQUEST_TYPE request;$/;"	m	struct:ProcessDescriptor	file:
sp	active.c	/^   unsigned char *sp;   \/* stack pointer into the "workSpace" *\/$/;"	m	struct:ProcessDescriptor	file:
state	active.c	/^   PROCESS_STATES state;$/;"	m	struct:ProcessDescriptor	file:
voidfuncptr	active.c	/^typedef void (*voidfuncptr) (void);      \/* pointer to void f(void) *\/$/;"	t	file:
workSpace	active.c	/^   unsigned char workSpace[WORKSPACE];$/;"	m	struct:ProcessDescriptor	file:
